version: "3"

services:
  backend:
    container_name: backend
    build:
      context: ../
      dockerfile: Dockerfile
    environment:
      # app
      - "APP_DEBUG=${APP_DEBUG}"
      # http
      - "HTTP_PORT=3000"
      - "HTTP_ADDRESS=0.0.0.0"
      - "HTTP_DOMAIN=${HTTP_DOMAIN}"
      - "HTTP_READ_TIMEOUT=${HTTP_READ_TIMEOUT}"
      - "HTTP_READ_HEADER_TIMEOUT=${HTTP_READ_HEADER_TIMEOUT}"
      - "HTTP_WRITE_TIMEOUT=${HTTP_WRITE_TIMEOUT}"
      - "HTTP_IDLE_TIMEOUT=${HTTP_IDLE_TIMEOUT}"
      # cors
      - "CORS_ALLOWED_ORIGIN=${CORS_ALLOWED_ORIGIN}"
      - "CORS_ALLOWED_METHOD=${CORS_ALLOWED_METHOD}"
      - "CORS_ALLOWED_HEADERS=${CORS_ALLOWED_HEADERS}"
      - "CORS_ALLOWED_CREDENTIALS=${CORS_ALLOWED_CREDENTIALS}"
      - "CORS_EXPOSE_HEADERS=${CORS_EXPOSE_HEADERS}"
      - "CORS_MAX_AGE=${CORS_MAX_AGE}"
      # jwt
      - "JWT_PRIVATE=${JWT_PRIVATE}"
      - "JWT_TTL_ACCESS=${JWT_TTL_ACCESS}"
      - "JWT_TTL_REFRESH=${JWT_TTL_REFRESH}"
      # redis
      - "REDIS_URL=${REDIS_URL}"
      #nats
      - "NATS_URL=${NATS_URL}"
      # postgres
      - "POSTGRESQL_URL=${POSTGRESQL_URL}"
      # trace
      - "TRACE_GRPC_ADDR=${TRACE_GRPC_ADDR}"
      - "METRIC_GRPC_ADDR=${METRIC_GRPC_ADDR}"
      - "TRACE_SERVICE_ID=${TRACE_SERVICE_ID}"
      - "TRACE_SERVICE_NAME=${TRACE_SERVICE_NAME}"
      - "TRACE_SERVICE_VERSION=${TRACE_SERVICE_VERSION}"
      - "TRACE_ENV_NAME=${TRACE_ENV_NAME}"
    depends_on:
      - redis
      - pgbouncer
      - otel_collector
    restart: unless-stopped
    ports:
      - "3000:3000"
    networks:
      - backend


volumes:
  postgres_data: { }
  redis_data: { }
  grafana-storage: { }

networks:
  backend:


